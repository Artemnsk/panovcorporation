package worklists;

import java.util.Collection;
import java.util.TreeSet;

import choosers.Chooser;
import choosers.GeneticChooser;

import net.sourceforge.interval.ia_math.RealInterval;

import rejecting.RejectorByValueAndDerivatives;
import core.Box;
import core.GeneticBox;

/*public abstract class GeneticWorkList extends WorkList{
	
	protected GeneticChooser chooser;
	
	protected GeneticWorkList(Collection<Box> collectionToUse, Box area) {
		super(collectionToUse, area);
	}
	
	public GeneticBox extractNext() {
		assert (_dbg_InitialAreaAddedCorrectly);
		if (collection.size() < 1) {
			return null;
		}
		GeneticBox b;
		do {
			b = chooser.extractNext();
			// cnt++;
		} while (b != null && screener.checkByValue(b) == false); // we do not clean the list all the time but we do not return bad boxes
		// TODO: if(cnt>CNT && b!=null) cleanList();															
		return b;
	}
	
}*/
